<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bishark_child</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.m_state = "created";
self.m_speed = SHARK_SPEED+1;
self.m_damage = SHARK_DAMAGE;
self.m_life = SHARK_LIFE-1;
self.m_score = SHARK_SCORE-1;
self.m_angleModifier = 75;
self.m_curAngleModifier = 0;
self.m_angleRate = 3;
self.m_sens = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(self.m_life &lt;=0)
{
    instance_destroy();
}
switch(self.m_state)
{
    case "in":
    {
        if(self.m_curAngleModifier &gt;= self.m_angleModifier)
        {
            self.m_state = "normal";
            move_towards_point(room_width/2,room_height/2,self.m_speed);
        }
        else
        {
            /*show_debug_message("Direction = "+string(self.direction));
            show_debug_message("curAngleModifier = "+string(self.m_curAngleModifier));*/
            self.m_curAngleModifier += self.m_angleRate;
            self.direction += self.m_angleRate*self.m_sens;
            self.speed = self.m_speed;
        }
        break;
    }
    case "out":
    {
        if(self.m_curAngleModifier &gt;= self.m_angleModifier)
        {
            self.m_state = "in";
            self.m_sens *= -1;
            self.m_curAngleModifier = 0;
        }
        else
        {
            /*show_debug_message("Direction = "+string(self.direction));
            show_debug_message("curAngleModifier = "+string(self.m_curAngleModifier));*/
            self.m_curAngleModifier += self.m_angleRate;
            self.direction += self.m_angleRate*self.m_sens;
            self.speed = self.m_speed;
        }
        break;
    }
    default:
    {
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_ship">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.m_curShield -= self.m_damage;
if(other.m_curShield &lt; 0)
{
    other.m_curLife += round(other.m_curShield);
    other.m_curShield = 0;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>50,50</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
