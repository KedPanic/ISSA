<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Constructor
self.m_counter[0] = s_counter_0;
self.m_counter[1] = s_counter_1;
self.m_counter[2] = s_counter_2;
self.m_counter[3] = s_counter_3;
self.m_counter[4] = s_counter_4;

self.m_current_selection = 0; // item selection.

// popup answer: yes=0 no=1
self.m_popup_answer = 1;

self.m_player = g_gameManager.m_best_player;

// Shop State.
self.WELCOME    = 0;
self.BUY        = 1;
self.ARE_U_SURE = 2;
self.START_RUN  = 3;
self.m_state = self.WELCOME;

for(var index = 0; index &lt; MAX_PLAYER; ++index)
{
    self.m_player_lstick_x_on[index] = false;
    self.m_player_lstick_y_on[index] = false;
}

// Text.
self.m_current_text = 0;

self.m_texts[0] = "Welcome stranger !";
self.m_texts[1] = "";

self.m_texts[2] = "Weapon 1";
self.m_texts[3] = "Weapon 1";

self.m_texts[4] = "Weapon 2";
self.m_texts[5] = "Weapon 2";

self.m_texts[6] = "Weapon 3";
self.m_texts[7] = "Weapon 3";

self.m_texts[8] = "Weapon 4";
self.m_texts[9] = "Weapon 4";

self.m_texts[10] = "Weapon 5";
self.m_texts[11] = "Weapon 5";

self.m_texts[12] = "Weapon 6";
self.m_texts[13] = "Weapon 6";

self.m_texts[14] = "Weapon 7";
self.m_texts[15] = "Weapon 7";

/* upgrade */
self.m_texts[16] = "Upgrade 1";
self.m_texts[17] = "Upgrade 1";

self.m_texts[18] = "Upgrade 2";
self.m_texts[19] = "Upgrade 2";

self.m_texts[20] = "Upgrade 3";
self.m_texts[21] = "Upgrade 3";

self.m_texts[22] = "Upgrade 4";
self.m_texts[23] = "Upgrade 4";

self.m_texts[24] = "Upgrade 5";
self.m_texts[25] = "Upgrade 5";

self.m_texts[26] = "Upgrade 6";
self.m_texts[27] = "Upgrade 6";

self.m_texts[28] = "Upgrade 7";
self.m_texts[29] = "Upgrade 7";


// ITEM PRICES:
self.m_prices[0] = 0;     // weapon 1
self.m_prices[1] = 0;     // weapon 2
self.m_prices[2] = 0;     // weapon 3
self.m_prices[3] = 0;     // weapon 4
self.m_prices[4] = 0;     // weapon 5
self.m_prices[5] = 0;     // weapon 6
self.m_prices[6] = 0;     // weapon 7
self.m_prices[7] = 0;     // upgrade 1
self.m_prices[8] = 0;     // upgrade 2
self.m_prices[9] = 0;     // upgrade 3
self.m_prices[10] = 0;    // upgrade 4
self.m_prices[11] = 0;    // upgrade 5
self.m_prices[12] = 0;    // upgrade 6
self.m_prices[13] = 0;    // upgrade 7


////////////////////////////////////////////////////
// eyebrows.
////////////////////////////////////////////////////
/* player 1 */
self.m_player_eyebrows[0,0] = s_eyebrow_player_1_1;
self.m_player_eyebrows[0,1] = s_eyebrow_player_1_2;
self.m_player_eyebrows[0,2] = s_eyebrow_player_1_3;
self.m_player_eyebrows[0,3] = s_eyebrow_player_1_5;
self.m_player_eyebrows[0,4] = s_eyebrow_player_1_4;
self.m_player_eyebrows[0,5] = s_eyebrow_player_1_6;
self.m_player_eyebrows[0,6] = s_eyebrow_player_1_7;
self.m_player_eyebrows[0,7] = s_eyebrow_player_1_8;

self.m_player_pos_x[0,0] = 74;
self.m_player_pos_y[0,0] = 115;
self.m_player_pos_x[0,1] = 64;
self.m_player_pos_y[0,1] = 110;
self.m_player_pos_x[0,2] = 76;
self.m_player_pos_y[0,2] = 152;
self.m_player_pos_x[0,4] = 65;
self.m_player_pos_y[0,4] = 98;
self.m_player_pos_x[0,3] = 69;
self.m_player_pos_y[0,3] = 116;
self.m_player_pos_x[0,5] = 75;
self.m_player_pos_y[0,5] = 111;
self.m_player_pos_x[0,6] = 74;
self.m_player_pos_y[0,6] = 103;
self.m_player_pos_x[0,7] = 65;
self.m_player_pos_y[0,7] = 114;



/* player 2 */
self.m_player_eyebrows[1,0] = s_eyebrow_player_2_1;
self.m_player_eyebrows[1,1] = s_eyebrow_player_2_2;
self.m_player_eyebrows[1,2] = s_eyebrow_player_2_3;
self.m_player_eyebrows[1,3] = s_eyebrow_player_2_4;
self.m_player_eyebrows[1,4] = s_eyebrow_player_2_5;
self.m_player_eyebrows[1,5] = s_eyebrow_player_2_6;
self.m_player_eyebrows[1,6] = s_eyebrow_player_2_7;
self.m_player_eyebrows[1,7] = s_eyebrow_player_2_8;

self.m_player_pos_x[1,0] = 47;
self.m_player_pos_y[1,0] = 110;
self.m_player_pos_x[1,1] = 51;
self.m_player_pos_y[1,1] = 104;
self.m_player_pos_x[1,2] = 28;
self.m_player_pos_y[1,2] = 145;
self.m_player_pos_x[1,3] = 42;
self.m_player_pos_y[1,3] = 110;
self.m_player_pos_x[1,4] = 36;
self.m_player_pos_y[1,4] = 103;
self.m_player_pos_x[1,5] = 40;
self.m_player_pos_y[1,5] = 109;
self.m_player_pos_x[1,6] = 43;
self.m_player_pos_y[1,6] = 96;
self.m_player_pos_x[1,7] = 45;
self.m_player_pos_y[1,7] = 103;



/* player 3 */
self.m_player_eyebrows[2,0] = s_eyebrow_player_3_1;
self.m_player_eyebrows[2,1] = s_eyebrow_player_3_2;
self.m_player_eyebrows[2,2] = s_eyebrow_player_3_3;
self.m_player_eyebrows[2,3] = s_eyebrow_player_3_4;
self.m_player_eyebrows[2,4] = s_eyebrow_player_3_5;
self.m_player_eyebrows[2,5] = s_eyebrow_player_3_6;
self.m_player_eyebrows[2,6] = s_eyebrow_player_3_7;
self.m_player_eyebrows[2,7] = s_eyebrow_player_3_8;

self.m_player_pos_x[2,0] = 60;
self.m_player_pos_y[2,0] = 64;
self.m_player_pos_x[2,1] = 52;
self.m_player_pos_y[2,1] = 67;
self.m_player_pos_x[2,2] = 92;
self.m_player_pos_y[2,2] = 33;
self.m_player_pos_x[2,3] = 62;
self.m_player_pos_y[2,3] = 59;
self.m_player_pos_x[2,4] = 51;
self.m_player_pos_y[2,4] = 69;
self.m_player_pos_x[2,5] = 59;
self.m_player_pos_y[2,5] = 65;
self.m_player_pos_x[2,6] = 46;
self.m_player_pos_y[2,6] = 68;
self.m_player_pos_x[2,7] = 54;
self.m_player_pos_y[2,7] = 63;



/* player 4 */
self.m_player_eyebrows[3,0] = s_eyebrow_player_4_1;
self.m_player_eyebrows[3,1] = s_eyebrow_player_4_2;
self.m_player_eyebrows[3,2] = s_eyebrow_player_4_3;
self.m_player_eyebrows[3,3] = s_eyebrow_player_4_4;
self.m_player_eyebrows[3,4] = s_eyebrow_player_4_5;
self.m_player_eyebrows[3,5] = s_eyebrow_player_4_6;
self.m_player_eyebrows[3,6] = s_eyebrow_player_4_7;
self.m_player_eyebrows[3,7] = s_eyebrow_player_4_8;

self.m_player_pos_x[3,0] = 48;
self.m_player_pos_y[3,0] = 115;
self.m_player_pos_x[3,1] = 51;
self.m_player_pos_y[3,1] = 109;
self.m_player_pos_x[3,2] = 47;
self.m_player_pos_y[3,2] = 166;
self.m_player_pos_x[3,3] = 47;
self.m_player_pos_y[3,3] = 110;
self.m_player_pos_x[3,4] = 48;
self.m_player_pos_y[3,4] = 110;
self.m_player_pos_x[3,5] = 47;
self.m_player_pos_y[3,5] = 118;
self.m_player_pos_x[3,6] = 51;
self.m_player_pos_y[3,6] = 105;
self.m_player_pos_x[3,7] = 41;
self.m_player_pos_y[3,7] = 114;



////////////////////////////////////////////////////
// players
////////////////////////////////////////////////////
self.m_players[0] = s_player1;
self.m_players[1] = s_player2;
self.m_players[2] = s_player3;
self.m_players[3] = s_player4;
self.m_player_masks[0] = s_player1_mask;
self.m_player_masks[1] = s_player2_mask;
self.m_player_masks[2] = s_player3_mask;
self.m_player_masks[3] = s_player4_mask;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(self.m_state)
{
case self.WELCOME:
    if(MenuPlayerValidate(self.m_player))
    {
        self.m_state = self.BUY;
        self.m_current_text = 1;
    }
    break;

case self.BUY:
    if(MenuShopInputUpdate(self.m_player, id))
    {
        if(self.m_prices[self.m_current_selection] &lt;= g_playerManager.m_money)
        {
            // check if we can buy a new weapon or a new upgrade.
            if(self.m_current_selection &lt; NB_WEAPONS)
            {
                if(g_gameManager.m_weapons[self.m_current_selection] &lt; MAX_PLAYER)
                {
                    self.m_state = self.ARE_U_SURE;
                }
            }             
            else if(g_gameManager.m_upgrades[self.m_current_selection - NB_WEAPONS] == false)
            {
                self.m_state = self.ARE_U_SURE;
            }
        }
    }

    self.m_current_text = 1 + self.m_current_selection;
    break;

case self.ARE_U_SURE:
    if(MenuShopInputUpdate(self.m_player, id))
    {
        if(self.m_popup_answer == 0)
        {
            // buy the item.
            g_playerManager.m_money -= self.m_prices[self.m_current_selection];
            
            if(self.m_current_selection &lt; NB_WEAPONS)
            {
                g_gameManager.m_weapons[self.m_current_selection]++;
            }             
            else if(g_gameManager.m_upgrades[self.m_current_selection - NB_WEAPONS] == false)
            {
                g_gameManager.m_upgrades[self.m_current_selection - NB_WEAPONS] = true;
            }
            
            self.m_popup_answer = 1;
        }
        
        self.m_state = self.BUY;
    }
    break;

case self.START_RUN:
    if(MenuShopInputUpdate(self.m_player, id))
    {
        if(self.m_popup_answer == 0)
        {
            room_goto(r_game);
        }
        else
        {
            self.m_state = self.BUY;
        }
    }
    break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

/* draw player */
//draw_sprite();

/* background */
draw_sprite(s_menu_shop, 0, 0, 0);

/* draw cursor */
if(self.m_state != self.WELCOME)
{
    var offsetx = 0;   
    var current_selection = self.m_current_selection;
    if(self.m_current_selection &gt; 6)
    {
        offsetx = 428;
        current_selection = self.m_current_selection - 7;
    }
    
    var posx = 127 + (100 * (current_selection mod 3)) + offsetx;
    var posy = 338 + (95  * floor(current_selection / 3));
    draw_sprite(s_shop_selection, 0, posx, posy);
    
    
    if(self.m_player.m_controller == KEYBOARD)
    {
        draw_set_halign(fa_center);
        draw_text_color(512, 930, "BUY ENTER", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);
        
        draw_text_color(890, 930, "CONTINUE SPACE", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);
    }
    else
    {
        draw_set_halign(fa_center);    
        draw_text_color(512, 930, "BUY ", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);
        draw_sprite(s_button_a, 0, 535, 930);
        
        draw_text_color(890, 930, "CONTINUE START", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);        
    }
}

/* draw weapon state */
for(var index = 0; index &lt; NB_WEAPONS; ++index)
{
    var posx = 184 + (100 * (index mod 3));
    var posy = 391 + (95  * floor(index / 3));
    draw_sprite(self.m_counter[g_gameManager.m_weapons[index]], 0, posx, posy);
}

for(var index = 0; index &lt; NB_UPGRADES; ++index)
{
    if(g_gameManager.m_upgrades[index] == true)
    {
        var posx = 564 + (100 * (index mod 3));
        var posy = 346 + (95  * floor(index / 3));
    
        draw_sprite(s_shop_bought, 0, posx, posy);
    }
}


/* draw cash */
draw_set_font(g_mainFont);
draw_set_halign(fa_right);
draw_text_color(635, 166, string(g_playerManager.m_money) + " $", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);

/* draw text */
var line = self.m_current_text * 2;
draw_set_halign(fa_left);
draw_text_color(327, 677, self.m_texts[line], g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);
draw_text_color(327, 727, self.m_texts[line + 1], g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);

if(self.m_state == self.WELCOME)
{
    draw_sprite(s_button_a, 0, 550, 727);
}

if(self.m_state == self.BUY)
{
    draw_sprite(s_shop_only, 0, 353, 825);
   
    draw_set_halign(fa_left);
    draw_text_color(468, 838, string(self.m_prices[self.m_current_selection]) + "$", g_mainColor, g_mainColor, g_mainColor, g_mainColor, 1);    
}

/* draw pop up */
if(self.m_state == self.ARE_U_SURE)
{
    draw_sprite(s_shop_popup, 0, 0, 0);
    
    draw_sprite(s_shop_popup_selection, 0, 372 + (138 * self.m_popup_answer), 521);
    
    draw_sprite(s_shop_popup_text, 0, 330, 398);
}

/* draw pop up */
if(self.m_state == self.START_RUN)
{
    draw_sprite(s_shop_popup, 0, 0, 0);
    
    draw_sprite(s_shop_popup_selection, 0, 372 + (138 * self.m_popup_answer), 521);
    
    draw_sprite(s_shop_popup_start, 0, 330, 398);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
